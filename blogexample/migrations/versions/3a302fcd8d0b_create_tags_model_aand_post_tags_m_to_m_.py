from alembic import op
import sqlalchemy as sa

import lib.util_datetime# import tzware_datetime
import lib.util_sqlalchemy# import AwareDateTime


"""create Tags model aand post_tags m-to-m relationship

Revision ID: 3a302fcd8d0b
Revises: 29d9055c6a28
Create Date: 2019-07-10 17:33:57.868610

"""



# revision identifiers, used by Alembic.
revision = '3a302fcd8d0b'
down_revision = '29d9055c6a28'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('created_on', lib.util_sqlalchemy.AwareDateTime(), nullable=True),
    sa.Column('updated_on', lib.util_sqlalchemy.AwareDateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
